struct rt {
  ll d, x, y;
};
 
rt gcd_ex(ll a, ll b) {
  if (!b)
    return {a, 1, 0};
  rt r = gcd_ex(b, a % b);
  return {r.d, r.y, r.x - r.y * (a / b)};
}
 
ll lcm(ll a, ll b) {
  return a / gcd_ex(a, b).d * b;
}
 
pll diof(ll a, ll b, ll c) {
  // n1, -n2, a2 - a1
  rt G = gcd_ex(abs(a), abs(b));
  if (c % G.d)
    return {-INF, -INF};
  G.x *= c / G.d;
  G.y *= c / G.d;
  if (a < 0) G.x = - G.x;
  if (b < 0) G.y = - G.y;
  return {G.x, G.y};
}
